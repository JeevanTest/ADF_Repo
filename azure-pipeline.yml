trigger: none
#  branches:
#    include:
#      - main

pool:
  vmImage: ubuntu-latest

variables:
 workingDirectory: '$(Build.Repository.LocalPath)'
 publishDirectory: '$(workingDirectory)/adf_publish'
 artifactName: 'adf-arm-artifact'
 devResourceGroup: 'zen-dev-grp'
 devDataFactory: 'zen-dev-adf'
#  Dev Connection URL's
 devInputADLSConnectionURL: 'https://zendevadls.dfs.core.windows.net/'
 devOutputADLSConnectionURL: 'https://zendevadls.dfs.core.windows.net/'
 devKeyVaultBaseURL: 'https://zen-dev-akv.vault.azure.net/'
#  stageResourceGroup: 'zen-stg-grp'
#  stageDataFactory: 'zen-stg-adf'

stages:
- stage: build
  displayName: 'Build Artifacts'

  jobs:
  - job: Build_ADF_ARM_Template
    displayName: 'Build ADF ARM Templates'
    workspace:
      clean: all

    steps:

    - checkout: self
      displayName: 'Checkout ADF Repo'
      clean: true

    - task: UseNode@1
      inputs:
        version: '18.x'
        # checkLatest: true
      displayName: 'Install Node.js'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(workingDirectory)/Package'
        verbose: true
      displayName: 'Install npm package'
      
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(workingDirectory)/Package'
        customCommand: 'run build validate $(workingDirectory) /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/$(devResourceGroup)/providers/Microsoft.DataFactory/factories/$(devDataFactory)'
      displayName: 'Validate the Source Code'

    # - script: echo '{}' > $(workingDirectory)/arm-template-parameters-definition.json
    #   displayName: 'Create placeholder for arm-template-parameters-definition.json'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(workingDirectory)/Package'
        customCommand: 'run build export $(workingDirectory) /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/$(devResourceGroup)/providers/Microsoft.DataFactory/factories/$(devDataFactory) "ArmTemplate"'
      displayName: 'Validate and Generate ARM template'

    # - task: Npm@1
    #   inputs:
    #     command: 'custom'
    #     workingDir: '$(workingDirectory)/Package'
    #     customCommand: >
    #       run build export $(workingDirectory) 
    #       /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/$(devResourceGroup)/providers/Microsoft.DataFactory/factories/$(devDataFactory) "ArmTemplate" 
    #       -ls_inputConnection "https://zendevadls.dfs.core.windows.net/" 
    # #       -ls_kv "$(devKeyVaultBaseURL)" 
    # #       -ls_outputConnection "$(devOutputADLSConnectionURL)"
    #   displayName: 'Validate and Generate ARM template'

    # - script: ls -la /home/vsts/work/1/s/Package
    #   displayName: 'List the files in Package Directory'
    
    # - script: |
    #    echo '{
    #      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
    #      "contentVersion": "1.0.0.0",
    #      "parameters": {
    #        "factoryName": {
    #          "value": "zen-dev-adf"
    #         },
    #        "ls_inputConnection_properties_typeProperties_url": {
    #          "value": "https://zendevadls.dfs.core.windows.net/"
    #         },
    #        "ls_kv_properties_typeProperties_baseUrl": {
    #          "value": "https://zen-dev-akv.vault.azure.net/"
    #        },
    #        "ls_outputConnection_properties_typeProperties_url": {
    #          "value": "https://zendevadls.dfs.core.windows.net/"
    #        }
    #       }
    #     }' > $(workingDirectory)/Package/ArmTemplate/ARMTemplateParametersForFactory.json
    #   displayName: 'Add Linked Service Parameters to Definition'
      
    
    # - script: |
    #     sed -i 's/"type": "Microsoft.DataFactory\/factories"/"type": "Microsoft.DataFactory\/factories", "properties": { "linkedServiceParameters": { "ls_inputConnection_properties_typeProperties_url": "[parameters('ls_inputConnection_properties_typeProperties_url')]", "ls_outputConnection_properties_typeProperties_url": "[parameters('ls_outputConnection_properties_typeProperties_url')]", "ls_kv_properties_typeProperties_baseUrl": "[parameters('ls_kv_properties_typeProperties_baseUrl')]" } }/' $(workingDirectory)/Package/ArmTemplate/ARMTemplateForFactory.json
    #   displayName: 'Update ARM Template to Include Linked Service Parameters'

    - script: ls -la /home/vsts/work/1/s/Package/ArmTemplate
      displayName: 'List the files in ArmTemplate Directory'
    
    - script: cat /home/vsts/work/1/s/Package/ArmTemplate/ARMTemplateForFactory.json
      displayName: 'Display the ARM Template contents'
      
    - script: cat /home/vsts/work/1/s/Package/ArmTemplate/ARMTemplateParametersForFactory.json
      displayName: 'Display the Parameter Template contents' 
    
     
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(workingDirectory)/Package/ArmTemplate'
        artifact: '$(artifactName)'
        publishLocation: 'pipeline'
      displayName: 'Publish Updated ARM Templates as Artifact'
 
- stage: Development
  displayName: 'Deploy to Development Environment'
  dependsOn: build
  condition: succeeded()
  
  variables:
    - group: Dev-Var-Grp

  jobs:
  - deployment: Deploy_to_Dev
    displayName: 'Deploy to Development'
    environment:
      name: DEV
      # resourceName: 'Development'
      # action: ManualApproval
    strategy:
      runOnce:
       deploy:
         steps:
           - task: DownloadPipelineArtifact@2
             inputs:
              artifact: '$(artifactName)'
              targetPath: '$(workingDirectory)/Package/ArmTemplate'
            
           - script: ls -la /home/vsts/work/1/s/Package/ArmTemplate
             displayName: 'List the files in ArmTemplate Directory'
                                    
           - task: AzureResourceManagerTemplateDeployment@3
             displayName: 'Deploy ARM Templates to DEV'
             inputs:
               deploymentScope: 'Resource Group'
              #  azureResourceManagerConnection: 'Pay-As-You-Go(25987c99-1fea-4a3c-bf3a-f22e90c8c662)'
               azureResourceManagerConnection: 'Service-Connection-Dev'
               subscriptionId: '25987c99-1fea-4a3c-bf3a-f22e90c8c662'
               action: 'Create Or Update Resource Group'
               resourceGroupName: '$(devResourceGroup)'
               location: 'East US 2'
               templateLocation: 'Linked artifact'
               csmFile: '$(workingDirectory)/Package/ArmTemplate/ARMTemplateForFactory.json'
               csmParametersFile: '$(workingDirectory)/Package/ArmTemplate/ARMTemplateParametersForFactory.json'
               overrideParameters: >
                 -factoryName $(devDataFactory)
                 -ls_inputConnection_properties_typeProperties_url $(devInputADLSConnectionURL)
                 -ls_kv_properties_typeProperties_baseUrl $(devKeyVaultBaseURL)
                 -ls_outputConnection_properties_typeProperties_url $(devOutputADLSConnectionURL)
                #  -adlspvtep_properties_privateLinkResourceId /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/zen-dev-grp/providers/Microsoft.Storage/storageAccounts/zendevadls
                #  -akvpvtep_properties_privateLinkResourceId /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/zen-dev-grp/providers/Microsoft.KeyVault/vaults/zen-dev-akv
               deploymentMode: 'Incremental'



- stage: Staging
  displayName: 'Deploy to Stage Environment'
  dependsOn: Development
  condition: succeeded()
  
  variables:
    - group: Stage-Var-Grp

  jobs:
  - deployment: Deploy_to_Stage
    displayName: 'Deploy to Stage'
    environment:
      name: STG
      # resourceName: 'STG'
      # action: ManualApproval
    strategy:
      runOnce:
       deploy:
         steps:
           - task: DownloadPipelineArtifact@2
             inputs:
              artifact: '$(artifactName)'
              targetPath: '$(workingDirectory)/Package/ArmTemplate'
            
           - script: ls -la /home/vsts/work/1/s/Package/ArmTemplate
             displayName: 'List the files in ArmTemplate Directory'
                                    
           - task: AzureResourceManagerTemplateDeployment@3
             displayName: 'Deploy ARM Templates to Stage'
             inputs:
               deploymentScope: 'Resource Group'
               azureResourceManagerConnection: 'Service-Connection-Stg'
               subscriptionId: '25987c99-1fea-4a3c-bf3a-f22e90c8c662'
               action: 'Create Or Update Resource Group'
               resourceGroupName: '$(stageResourceGroup)'
               location: 'East US 2'
               templateLocation: 'Linked artifact'
               csmFile: '$(workingDirectory)/Package/ArmTemplate/ARMTemplateForFactory.json'
               csmParametersFile: '$(workingDirectory)/Package/ArmTemplate/ARMTemplateParametersForFactory.json'
               overrideParameters: >
                 -factoryName $(stageDataFactory)
                 -ls_inputConnection_properties_typeProperties_url $(stageInputADLSConnectionURL)
                 -ls_kv_properties_typeProperties_baseUrl $(stageKeyVaultBaseURL)
                 -ls_outputConnection_properties_typeProperties_url $(stageOutputADLSConnectionURL)
                #  -adlspvtep_properties_privateLinkResourceId /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/zen-stg-grp/providers/Microsoft.Storage/storageAccounts/zenstgadls
                #  -akvpvtep_properties_privateLinkResourceId /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/zen-stg-grp/providers/Microsoft.KeyVault/vaults/zen-stg-akv
               deploymentMode: 'Incremental'



# - stage: Production
#   displayName: 'Deploy to Prod Environment'
#   dependsOn: Staging
#   condition: succeeded()
  
#   variables:
#     - group: Prod-Var-Grp

#   jobs:
#   - deployment: Deploy_to_Prod
#     displayName: 'Deploy to Prod'
#     environment:
#       name: PRD
#       # resourceName: 'PRD'
#       # action: ManualApproval
#     strategy:
#       runOnce:
#        deploy:
#          steps:
#            - task: DownloadPipelineArtifact@2
#              inputs:
#               artifact: '$(artifactName)'
#               targetPath: '$(workingDirectory)/Package/ArmTemplate'
            
#            - script: ls -la /home/vsts/work/1/s/Package/ArmTemplate
#              displayName: 'List the files in ArmTemplate Directory'
                                    
#            - task: AzureResourceManagerTemplateDeployment@3
#              displayName: 'Deploy ARM Templates to Prod'
#              inputs:
#                deploymentScope: 'Resource Group'
#                azureResourceManagerConnection: 'Service-Connection-Prd'
#                subscriptionId: '25987c99-1fea-4a3c-bf3a-f22e90c8c662'
#                action: 'Create Or Update Resource Group'
#                resourceGroupName: '$(prodResourceGroup)'
#                location: 'East US 2'
#                templateLocation: 'Linked artifact'
#                csmFile: '$(workingDirectory)/Package/ArmTemplate/ARMTemplateForFactory.json'
#                csmParametersFile: '$(workingDirectory)/Package/ArmTemplate/ARMTemplateParametersForFactory.json'
#                overrideParameters: >
#                  -factoryName $(prodDataFactory)
#                  -ls_inputConnection_properties_typeProperties_url $(prodInputADLSConnectionURL)
#                  -ls_kv_properties_typeProperties_baseUrl $(prodKeyVaultBaseURL)
#                  -ls_outputConnection_properties_typeProperties_url $(prodOutputADLSConnectionURL)
#                 #  -adlspvtep_properties_privateLinkResourceId /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/zen-prd-grp/providers/Microsoft.Storage/storageAccounts/zenprdadls
#                 #  -akvpvtep_properties_privateLinkResourceId /subscriptions/25987c99-1fea-4a3c-bf3a-f22e90c8c662/resourceGroups/zen-prd-grp/providers/Microsoft.KeyVault/vaults/zen-prd-akv
#                deploymentMode: 'Incremental'
